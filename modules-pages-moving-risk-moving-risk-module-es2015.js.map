{"version":3,"sources":["./src/app/modules/pages/moving-risk/moving-risk.component.ts","./src/app/modules/pages/moving-risk/moving-risk.component.html","./src/app/modules/pages/moving-risk/moving-risk-routing.module.ts","./src/app/modules/pages/moving-risk/moving-risk.module.ts"],"names":[],"mappings":"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","file":"modules-pages-moving-risk-moving-risk-module-es2015.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {combineLatest, Subject} from \"rxjs\";\nimport {map, switchMap, takeUntil, tap} from \"rxjs/operators\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CustomersService, Species} from \"../../../../generated/api\";\nimport {MovingRiskData} from \"../../../util/data\";\nimport {DataService} from \"../../../services/data.service\";\nimport {FormDataService} from \"../../../services/form-data.service\";\n\n@Component({\n  selector: 'app-moving-risk',\n  templateUrl: './moving-risk.component.html',\n  styleUrls: ['./moving-risk.component.scss']\n})\nexport class MovingRiskComponent implements OnInit, OnDestroy {\n\n  private readonly destroyed$ = new Subject();\n  loading: boolean = true;\n  movingRiskData: ReadonlyArray<MovingRiskData> | null = null;\n  species: Species | null = null;\n\n  constructor(\n      private readonly route: ActivatedRoute,\n      private readonly customerService: CustomersService,\n      private readonly formDataService: FormDataService,\n      private readonly dataService: DataService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.pipe(\n        tap(() => this.loading = true),\n        map((params) => {\n          const forMonths = parseInt(params.get('for_months') ?? '', 10);\n          return {\n            customerId: params.get('customer_id'),\n            speciesId: params.get('species_id'),\n            forMonths: forMonths,\n          };\n        }),\n        switchMap(({customerId, speciesId, forMonths}) => {\n          return combineLatest([\n            this.customerService.customersMovingRiskList(Number(customerId), forMonths, speciesId),\n            this.dataService.getIdx('species').pipe(\n                map(species => species.get(speciesId))\n            ),\n            this.dataService.get('levels')\n          ]);\n        }),\n        map(([apiMovingRiskData, species, allLevels]) => {\n          console.log(\"APIMOVRISK\", {apiMovingRiskData, species})\n\n          return [\n            this.formDataService.makeMovingRiskData(apiMovingRiskData, allLevels),\n            species\n          ] as const;\n        }),\n        tap(() => this.loading = false),\n        takeUntil(this.destroyed$)\n    ).subscribe(([movingRiskData, species]) => {\n      this.movingRiskData = movingRiskData;\n      this.species = species;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n}\n","<ng-container *ngIf=\"!loading; else: spinner\">\n    <app-moving-risk-display *ngIf=\"movingRiskData != null && species != null\" [reportMode]=\"true\" [movingRiskData]=\"movingRiskData\" [species]=\"species\">\n\n    </app-moving-risk-display>\n</ng-container>\n<ng-template #spinner>\n    <div class=\"spinner-container\">\n        <mat-spinner color=\"primary\"></mat-spinner>\n    </div>\n</ng-template>","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {MovingRiskComponent} from './moving-risk.component';\n\nconst routes: Routes = [\n    {path: '', component: MovingRiskComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MovingRiskRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MovingRiskRoutingModule } from './moving-risk-routing.module';\nimport { MovingRiskComponent } from './moving-risk.component';\nimport {ComponentsModule} from \"../../components/components.module\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n\n@NgModule({\n  declarations: [MovingRiskComponent],\n  imports: [\n    CommonModule,\n    MovingRiskRoutingModule,\n    ComponentsModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class MovingRiskModule { }\n"],"sourceRoot":"webpack:///"}