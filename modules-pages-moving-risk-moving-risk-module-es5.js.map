{"version":3,"sources":["webpack:///src/app/modules/pages/moving-risk/moving-risk.component.ts","webpack:///src/app/modules/pages/moving-risk/moving-risk.component.html","webpack:///src/app/modules/pages/moving-risk/moving-risk-routing.module.ts","webpack:///src/app/modules/pages/moving-risk/moving-risk.module.ts"],"names":["MovingRiskComponent","route","customerService","formDataService","dataService","destroyed$","loading","movingRiskData","species","paramMap","pipe","params","forMonths","parseInt","get","customerId","speciesId","customersMovingRiskList","Number","getIdx","apiMovingRiskData","allLevels","console","log","makeMovingRiskData","subscribe","next","complete","selector","templateUrl","styleUrls","routes","path","component","MovingRiskRoutingModule","forChild","imports","exports","MovingRiskModule","declarations"],"mappings":"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","file":"modules-pages-moving-risk-moving-risk-module-es5.js","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {combineLatest, Subject} from \"rxjs\";\nimport {map, switchMap, takeUntil, tap} from \"rxjs/operators\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CustomersService, Species} from \"../../../../generated/api\";\nimport {MovingRiskData} from \"../../../util/data\";\nimport {DataService} from \"../../../services/data.service\";\nimport {FormDataService} from \"../../../services/form-data.service\";\n\n@Component({\n  selector: 'app-moving-risk',\n  templateUrl: './moving-risk.component.html',\n  styleUrls: ['./moving-risk.component.scss']\n})\nexport class MovingRiskComponent implements OnInit, OnDestroy {\n\n  private readonly destroyed$ = new Subject();\n  loading: boolean = true;\n  movingRiskData: ReadonlyArray<MovingRiskData> | null = null;\n  species: Species | null = null;\n\n  constructor(\n      private readonly route: ActivatedRoute,\n      private readonly customerService: CustomersService,\n      private readonly formDataService: FormDataService,\n      private readonly dataService: DataService,\n  ) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.pipe(\n        tap(() => this.loading = true),\n        map((params) => {\n          const forMonths = parseInt(params.get('for_months') ?? '', 10);\n          return {\n            customerId: params.get('customer_id'),\n            speciesId: params.get('species_id'),\n            forMonths: forMonths,\n          };\n        }),\n        switchMap(({customerId, speciesId, forMonths}) => {\n          return combineLatest([\n            this.customerService.customersMovingRiskList(Number(customerId), forMonths, speciesId),\n            this.dataService.getIdx('species').pipe(\n                map(species => species.get(speciesId))\n            ),\n            this.dataService.get('levels')\n          ]);\n        }),\n        map(([apiMovingRiskData, species, allLevels]) => {\n          console.log(\"APIMOVRISK\", {apiMovingRiskData, species})\n\n          return [\n            this.formDataService.makeMovingRiskData(apiMovingRiskData, allLevels),\n            species\n          ] as const;\n        }),\n        tap(() => this.loading = false),\n        takeUntil(this.destroyed$)\n    ).subscribe(([movingRiskData, species]) => {\n      this.movingRiskData = movingRiskData;\n      this.species = species;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n}\n","<ng-container *ngIf=\"!loading; else: spinner\">\n    <app-moving-risk-display *ngIf=\"movingRiskData != null && species != null\" [reportMode]=\"true\" [movingRiskData]=\"movingRiskData\" [species]=\"species\">\n\n    </app-moving-risk-display>\n</ng-container>\n<ng-template #spinner>\n    <div class=\"spinner-container\">\n        <mat-spinner color=\"primary\"></mat-spinner>\n    </div>\n</ng-template>","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {MovingRiskComponent} from './moving-risk.component';\n\nconst routes: Routes = [\n    {path: '', component: MovingRiskComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MovingRiskRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MovingRiskRoutingModule } from './moving-risk-routing.module';\nimport { MovingRiskComponent } from './moving-risk.component';\nimport {ComponentsModule} from \"../../components/components.module\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\n\n\n@NgModule({\n  declarations: [MovingRiskComponent],\n  imports: [\n    CommonModule,\n    MovingRiskRoutingModule,\n    ComponentsModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class MovingRiskModule { }\n"]}